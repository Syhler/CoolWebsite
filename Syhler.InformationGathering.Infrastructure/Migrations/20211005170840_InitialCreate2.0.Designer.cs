// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Syhler.InformationGathering.Infrastructure.Context;

namespace Syhler.InformationGathering.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211005170840_InitialCreate2.0")]
    partial class InitialCreate20
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("Syhler.InformationGathering.Infrastructure.Entities.MusicEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WebsiteEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteEntityId");

                    b.ToTable("MusicEntities");
                });

            modelBuilder.Entity("Syhler.InformationGathering.Infrastructure.Entities.WebsiteEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrentPage")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsInFocus")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("TimeVisited")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("WebsiteEntities");
                });

            modelBuilder.Entity("Syhler.InformationGathering.Infrastructure.Entities.YoutubeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChannelName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsPlayingAndNotFocus")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("IsPlayingAndNotFocusNorCurrentPage")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("WebsiteEntityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WebsiteEntityId");

                    b.ToTable("YoutubeEntities");
                });

            modelBuilder.Entity("Syhler.InformationGathering.Infrastructure.Entities.MusicEntity", b =>
                {
                    b.HasOne("Syhler.InformationGathering.Infrastructure.Entities.WebsiteEntity", "WebsiteEntity")
                        .WithMany("MusicEntities")
                        .HasForeignKey("WebsiteEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebsiteEntity");
                });

            modelBuilder.Entity("Syhler.InformationGathering.Infrastructure.Entities.YoutubeEntity", b =>
                {
                    b.HasOne("Syhler.InformationGathering.Infrastructure.Entities.WebsiteEntity", "WebsiteEntity")
                        .WithMany()
                        .HasForeignKey("WebsiteEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WebsiteEntity");
                });

            modelBuilder.Entity("Syhler.InformationGathering.Infrastructure.Entities.WebsiteEntity", b =>
                {
                    b.Navigation("MusicEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
